"""
Tests do not include two tests - test with
float numbers as arguments (they can be unobviously
generated by some other modules) and test with future
date ('2056, 1, 1' for example). First test will always
be failed, and second will always be passed. Also,
since 'actual_password' is working with datetime.date.today()
- it is necessary to update the test statements at least 1
time per month, or rebuild the whole application.
"""

from datetime import date, timedelta
from app.main import actual_password


today_test_date = date.today()


def test_60_days_or_more():
    test_date = today_test_date - timedelta(days=100)
    assert actual_password(test_date.year, test_date.month, test_date.day) == "Immediately change the password!"


def test_30_days_or_more():
    test_date = today_test_date - timedelta(days=40)
    assert actual_password(test_date.year, test_date.month, test_date.day) == "You should change your password."


def test_less_than_30_days():
    test_date = today_test_date - timedelta(days=10)
    assert actual_password(test_date.year, test_date.month, test_date.day) == "Password is actual."


def test_weird_date():
    test_date = today_test_date - timedelta(days=10000)
    assert actual_password(test_date.year, test_date.month, test_date.day) == "Immediately change the password!"
